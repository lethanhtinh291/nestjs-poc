version: 0.2
env:
  variables:
    IMAGE_REPO_URL: $IMAGE_REPO_URL
    IMAGE_PLATFORM_NAME: node:16.15.1
    IMAGE_APP_NAME: $IMAGE_APP_NAME
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password | docker login --username AWS --password-stdin $IMAGE_REPO_URL
      - export IMAGE_VERSION=$(date +%Y%m%d%H%M%S)
      - echo $IMAGE_VERSION
      - aws s3 cp s3://poc-miraen/poc-miraen/env .env
      - aws s3 cp s3://poc-miraen/poc-miraen/appspec.yml .
      - aws s3 cp s3://poc-miraen/poc-miraen/start_server.sh .
      - aws s3 cp s3://poc-miraen/poc-miraen/stop_server.sh .
      - sed -i 's/@PROJ_NAME@/'${PROJ_NAME}'/' ./appspec.yml
      - sed -i 's/@PROFILE@/'${PROFILE}'/; s/@PROJ_NAME@/'${PROJ_NAME}'/; s/@TAG_VERSION@/'${TAG_VERSION}'/; s/@AWS_ACCOUNT_ID@/'${AWS_ACCOUNT_ID}'/; s/@AWS_DEFAULT_REGION@/'${AWS_DEFAULT_REGION}'/; s/@COMPANY_NAME@/'${COMPANY_NAME}'/; s/@IMAGE_VERSION@/'${IMAGE_VERSION}'/' ./start_server.sh
      - sed -i 's/@PROFILE@/'${PROFILE}'/; s/@PROJ_NAME@/'${PROJ_NAME}'/; s/@TAG_VERSION@/'${TAG_VERSION}'/; s/@AWS_ACCOUNT_ID@/'${AWS_ACCOUNT_ID}'/; s/@AWS_DEFAULT_REGION@/'${AWS_DEFAULT_REGION}'/; s/@COMPANY_NAME@/'${COMPANY_NAME}'/; s/@AWS_ACCESS_KEY_ID@/'${AWS_ACCESS_KEY_ID}'/; s/@AWS_SECRET_ACCESS_KEY@/'${AWS_SECRET_ACCESS_KEY}'/; s/@IMAGE_VERSION@/'${IMAGE_VERSION}'/' ./stop_server.sh
  build:
    commands:
      - echo ========================================
      - echo BUILD STARTED ON `date`
      - ls -la
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_URL$IMAGE_APP_NAME:$IMAGE_VERSION .
  post_build:
    commands:
      - echo ========================================
      - echo BUILD COMPLETED ON `date`
      - echo Pushing the Docker images...
      - docker push $IMAGE_REPO_URL$IMAGE_APP_NAME:$IMAGE_VERSION
      - echo Writing image definitions file...
      - printf '[{"name":"%s:%s","imageUri":"%s"}]' $IMAGE_APP_NAME $IMAGE_VERSION $IMAGE_REPO_NAME:$IMAGE_VERSION > imagedefinitions.json
cache:
  paths:
    - './node_modules/**/*'
artifacts:
  files:
    - 'imagedefinitions.json'
    - 'appspec.yml'
    - '.env'
    - 'start_server.sh'
    - 'stop_server.sh'
    - 'docker-compose.yml'
    - 'redis.conf'
    - 'yarn.lock'
    - 'Dockerfile'
