version: 0.2

env:
  variables:
    PROFILE: $PROFILE
    PROJ_NAME: $PROJ_NAME
    COMPANY_NAME: $COMPANY_NAME
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION

phases:
  pre_build:
    commands:
      # 배포시 TAG_VERSION값을 변경
      # 예) 다음배포시 TAG_VERSION=0.1.2.${CODEBUILD_BUILD_NUMBER}
      - TAG_VERSION=0.0.1.${CODEBUILD_BUILD_NUMBER} # MAJOR.MINER.PATCH.CODEBUILD_NUMBER로 구성
      - echo ${TAG_VERSION}
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/private-ecr-${COMPANY_NAME}-${PROJ_NAME}
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - cp deploy/appspec.yml ./appspec.yml
      - cp deploy/start_server.sh ./start_server.sh
      - cp deploy/stop_server.sh ./stop_server.sh
      - sed -i 's/@PROJ_NAME@/'${PROJ_NAME}'/' ./appspec.yml
      - sed -i 's/@PROFILE@/'${PROFILE}'/; s/@PROJ_NAME@/'${PROJ_NAME}'/; s/@TAG_VERSION@/'${TAG_VERSION}'/; s/@AWS_ACCOUNT_ID@/'${AWS_ACCOUNT_ID}'/; s/@AWS_DEFAULT_REGION@/'${AWS_DEFAULT_REGION}'/; s/@COMPANY_NAME@/'${COMPANY_NAME}'/;' ./start_server.sh
      - sed -i 's/@PROFILE@/'${PROFILE}'/; s/@PROJ_NAME@/'${PROJ_NAME}'/; s/@TAG_VERSION@/'${TAG_VERSION}'/; s/@AWS_ACCOUNT_ID@/'${AWS_ACCOUNT_ID}'/; s/@AWS_DEFAULT_REGION@/'${AWS_DEFAULT_REGION}'/; s/@COMPANY_NAME@/'${COMPANY_NAME}'/; s/@AWS_ACCESS_KEY_ID@/'${AWS_ACCESS_KEY_ID}'/; s/@AWS_SECRET_ACCESS_KEY@/'${AWS_SECRET_ACCESS_KEY}'/;' ./stop_server.sh
  build:
    #commands 해당부분을 프로젝트 성격에 맞게 빌드 명령어 작성하여 배포 (필수)
    commands:
      - echo Build started on `date`
      - echo Build maven
      - mvn package -DskipTests -f pom.xml
      - echo Building the Docker image...
      - docker build -f Dockerfile -t $REPOSITORY_URI:${PROFILE}_${TAG_VERSION} .
      - docker tag $REPOSITORY_URI:${PROFILE}_${TAG_VERSION} $REPOSITORY_URI:${PROFILE}_latest
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:${PROFILE}_${TAG_VERSION}
      - docker push $REPOSITORY_URI:${PROFILE}_latest

artifacts:
  files:
    #- './**/*'
    - 'appspec.yml'
    - 'stop_server.sh'
    - 'start_server.sh'
